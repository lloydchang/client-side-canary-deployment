name: Canary Deployment Analytics

on:
  schedule:
    - cron: '0 */6 * * *'  # Run every 6 hours
  workflow_dispatch:        # Allow manual triggering

jobs:
  analyze-canary:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          
      - name: Make analytics script executable
        run: chmod +x ./scripts/analyze-canary.js
        
      - name: Run canary analysis
        id: canary_analysis
        env:
          POSTHOG_API_KEY: ${{ secrets.POSTHOG_API_KEY }}
          POSTHOG_PROJECT_ID: ${{ secrets.POSTHOG_PROJECT_ID }}
          POSTHOG_HOST: 'us.i.posthog.com'
          ERROR_THRESHOLD: 0.02  # 2% error rate threshold
          TIMEFRAME: '24h'       # Analyze the last 24 hours
        run: |
          OUTPUT=$(node ./scripts/analyze-canary.js)
          echo "$OUTPUT" > canary-analysis.json
          echo "ANALYSIS_RESULT<<EOF" >> $GITHUB_ENV
          echo "$OUTPUT" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
          
          # Extract the recommended action
          RECOMMENDED_ACTION=$(echo "$OUTPUT" | jq -r '.analysis.recommendedAction')
          echo "RECOMMENDED_ACTION=$RECOMMENDED_ACTION" >> $GITHUB_ENV
          
          if [[ "$RECOMMENDED_ACTION" == "rollback" ]]; then
            echo "::warning::Canary version shows elevated error rates - rollback recommended"
          else
            echo "::notice::Canary version performing within acceptable parameters"
          fi
      
      - name: Create summary report
        run: |
          echo "# Canary Deployment Analysis" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Analysis timestamp: $(date)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Version | Pageviews | Errors | Error Rate |" >> $GITHUB_STEP_SUMMARY
          echo "|---------|-----------|--------|------------|" >> $GITHUB_STEP_SUMMARY
          echo "| Stable | $(jq -r '.stable.pageviews' canary-analysis.json) | $(jq -r '.stable.errors' canary-analysis.json) | $(jq -r '.stable.errorRate' canary-analysis.json) |" >> $GITHUB_STEP_SUMMARY
          echo "| Canary | $(jq -r '.canary.pageviews' canary-analysis.json) | $(jq -r '.canary.errors' canary-analysis.json) | $(jq -r '.canary.errorRate' canary-analysis.json) |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## Analysis" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- Relative error increase: $(jq -r '.analysis.relativeErrorIncrease' canary-analysis.json)" >> $GITHUB_STEP_SUMMARY
          echo "- Exceeds threshold: $(jq -r '.analysis.exceedsThreshold' canary-analysis.json)" >> $GITHUB_STEP_SUMMARY
          echo "- **Recommended action**: $(jq -r '.analysis.recommendedAction' canary-analysis.json)" >> $GITHUB_STEP_SUMMARY
      
      - name: Archive analysis results
        uses: actions/upload-artifact@v3
        with:
          name: canary-analysis
          path: canary-analysis.json
          retention-days: 30
      
      - name: Auto-rollback (if needed)
        if: env.RECOMMENDED_ACTION == 'rollback'
        run: |
          echo "Canary version error rates exceed threshold!"
          echo "Initiating automatic rollback process..."
          # This is where you would implement your rollback logic
          # For example, a script that updates configurations to direct all traffic to stable
          # Or trigger another workflow using the GitHub API
