name: Canary Deployment & Analytics

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      task:
        description: 'Task to run (deploy, analyze, or adjust)'
        required: true
        default: 'deploy'
        type: choice
        options:
          - deploy
          - analyze
          - adjust
      canary_percentage:
        description: 'New canary percentage (only for adjust task)'
        required: false
        type: number
  schedule:
    - cron: '0 */6 * * *' # Run every 6 hours

permissions:
  contents: write
  pages: write
  id-token: write

env:
  NODE_VERSION: '22'
  GIT_USER_NAME: 'lloydchang'
  GIT_USER_EMAIL: 'lloydchang@gmail.com'

jobs:
  deploy:
    if: github.event_name == 'push' || (github.event_name == 'workflow_dispatch' && github.event.inputs.task == 'deploy')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v3
      
      - name: Setup Node.js ⚙️
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
      
      - name: Update Version and Config
        run: |
          ./.github/scripts/update-version.sh
          ./.github/scripts/update-config.sh
        env:
          POSTHOG_PUBLIC_KEY: ${{ secrets.POSTHOG_PUBLIC_KEY }}
          POSTHOG_PROJECT_ID: ${{ secrets.POSTHOG_PROJECT_ID }}
      
      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: frontend
          branch: gh-pages
          clean: true
          single-commit: true
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Commit Updated Version
        uses: ./.github/actions/commit-changes
        with:
          message: "Update version to $(jq -r .version frontend/version.json) [skip ci]"
          files: "frontend/version.json"
          token: ${{ secrets.GITHUB_TOKEN }}

  analyze:
    if: github.event_name == 'schedule' || (github.event_name == 'workflow_dispatch' && github.event.inputs.task == 'analyze')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4 # It's good practice to use a specific version

      - name: Setup Node.js
        uses: actions/setup-node@v4 # It's good practice to use a specific version
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm' # Assuming you use npm, adjust if using yarn or pnpm

      - name: Run Canary Analysis
        id: initial_analysis
        run: |
          chmod +x ./.github/scripts/run-analysis.sh
          ./.github/scripts/run-analysis.sh
      
      - name: Preserve Initial Analysis for Summary
        run: cp canary-analysis.json initial_canary_analysis_for_summary.json

      - name: Update Configuration and History
        id: update_config
        run: |
          chmod +x ./.github/scripts/update-canary-config.sh
          ./.github/scripts/update-canary-config.sh
      
      - name: Create summary report
        run: |
          # Modify this step to use 'initial_canary_analysis_for_summary.json'
          # instead of 'canary-analysis.json' when generating the summary.
          #
          # For example, if you have a script like ./.github/scripts/generate_summary.sh
          # that normally reads 'canary-analysis.json', change its invocation:
          #
          #   chmod +x ./.github/scripts/generate_summary.sh
          #   ./.github/scripts/generate_summary.sh initial_canary_analysis_for_summary.json
          #
          # Or, if your summary generation involves direct jq parsing and echos:
          #
          #   REPORT_FILE="initial_canary_analysis_for_summary.json"
          #   STABLE_PAGEVIEWS=$(jq -r '.analytics.stable.pageviews' $REPORT_FILE)
          #   # ... and so on for other values ...
          #   echo "### Canary Deployment Analysis" >> $GITHUB_STEP_SUMMARY
          #   echo "Analysis timestamp: $(jq -r '.timestamp' $REPORT_FILE)" >> $GITHUB_STEP_SUMMARY
          #   # ... format the rest of the summary using data from $REPORT_FILE ...
          #
          echo "IMPORTANT: Adapt the 'Create summary report' step above to read from 'initial_canary_analysis_for_summary.json'"
          echo "This example assumes you will modify your summary generation logic."
          # As a placeholder, let's cat the initial analysis to the summary if it exists
          if [ -f initial_canary_analysis_for_summary.json ]; then
            echo "--- Raw Initial Analysis Data ---" >> $GITHUB_STEP_SUMMARY
            cat initial_canary_analysis_for_summary.json >> $GITHUB_STEP_SUMMARY
            echo "---------------------------------" >> $GITHUB_STEP_SUMMARY
          fi
      
      - name: Save Analytics Results
        uses: actions/upload-artifact@v4 # Use an updated version of the action
        with:
          name: analytics-results
          # This will save the 'canary-analysis.json' that was last written by 
          # update-canary-config.sh (containing mock data and "manual" reason).
          # If you want to archive the *initial* (real) analysis data instead,
          # change 'path' to: initial_canary_analysis_for_summary.json
          path: canary-analysis.json

  adjust:
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.task == 'adjust'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout and setup
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
      
      - name: Adjust Canary Percentage
        run: ./.github/scripts/adjust-canary.sh
        env:
          CANARY_PERCENTAGE: ${{ github.event.inputs.canary_percentage }}
          GIT_USER_NAME: ${{ env.GIT_USER_NAME }}
          GIT_USER_EMAIL: ${{ env.GIT_USER_EMAIL }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          POSTHOG_API_KEY: ${{ secrets.POSTHOG_API_KEY }}
          POSTHOG_PROJECT_ID: ${{ secrets.POSTHOG_PROJECT_ID }}
          POSTHOG_PUBLIC_KEY: ${{ secrets.POSTHOG_PUBLIC_KEY }}
      
      - name: Deploy to gh-pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages
          clean: false
          token: ${{ secrets.GITHUB_TOKEN }}
          folder: frontend
          target-folder: frontend
      
      - name: Create summary report
        run: |
          echo "# Canary Percentage Adjustment" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "✅ Successfully updated canary percentage to ${{ github.event.inputs.canary_percentage }}%" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Changes have been committed to both main and gh-pages branches." >> $GITHUB_STEP_SUMMARY
          echo "The version.json file has also been updated to trigger client refreshes." >> $GITHUB_STEP_SUMMARY
