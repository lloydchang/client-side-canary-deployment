name: Deploy and Analytics

on:
  # For deployment
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      task:
        description: 'Task to run (deploy or analyze)'
        required: true
        default: 'deploy'
  # For analytics
  schedule:
    - cron: '0 */6 * * *' # Run every 6 hours

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  # Deployment job
  build-and-deploy:
    if: github.event_name == 'push' || (github.event_name == 'workflow_dispatch' && github.event.inputs.task == 'deploy')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      
      - name: Install Dependencies
        run: npm install
      
      - name: Build Project
        run: npx rollup -c --bundleConfigAsCjs
      
      - name: Replace PostHog Keys
        run: |
          # Create config directory if it doesn't exist
          mkdir -p config
          
          # Create canary config file with PostHog keys
          cat > config/canary-config.json << EOF
          {
            "posthog": {
              "apiKey": "${{ secrets.POSTHOG_PUBLIC_KEY }}",
              "projectId": "${{ secrets.POSTHOG_PROJECT_ID }}",
              "host": "https://us.i.posthog.com"
            },
            "canary": {
              "initialPercentage": 5,
              "maxPercentage": 50,
              "incrementStep": 5
            }
          }
          EOF
      
      - name: Configure Base Path
        run: |
          # Create a .nojekyll file to disable Jekyll processing
          touch .nojekyll
          
          # Create a config file for GitHub Pages with the correct base path
          echo '{ "baseUrl": "/client-side-canary-deployment" }' > config/gh-pages.json
      
      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: .                    # The folder to deploy
          branch: gh-pages             # The branch to deploy to
          clean: true                  # Automatically remove deleted files
          single-commit: true          # Delete previous deployment history
          token: ${{ secrets.GITHUB_TOKEN }}

  # Enhanced Analytics job from canary-analytics.yml
  analyze-canary:
    if: github.event_name == 'schedule' || (github.event_name == 'workflow_dispatch' && github.event.inputs.task == 'analyze')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      
      - name: Install Dependencies
        run: npm install
      
      - name: Make analytics script executable
        run: chmod +x ./scripts/analyze-canary.js
        
      - name: Run canary analysis
        id: canary_analysis
        env:
          POSTHOG_API_KEY: ${{ secrets.POSTHOG_API_KEY }}
          POSTHOG_PROJECT_ID: ${{ secrets.POSTHOG_PROJECT_ID }}
          POSTHOG_HOST: 'https://us.i.posthog.com'
          ERROR_THRESHOLD: ${{ vars.ERROR_THRESHOLD || '0.02' }}
          TIMEFRAME: ${{ vars.TIMEFRAME || '24h' }}
        run: |
          OUTPUT=$(node ./scripts/analyze-canary.js)
          echo "$OUTPUT" > canary-analysis.json
          echo "ANALYSIS_RESULT<<EOF" >> $GITHUB_ENV
          echo "$OUTPUT" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
          
          # Extract the recommended action
          RECOMMENDED_ACTION=$(echo "$OUTPUT" | jq -r '.analysis.recommendedAction')
          echo "RECOMMENDED_ACTION=$RECOMMENDED_ACTION" >> $GITHUB_ENV
          
          if [[ "$RECOMMENDED_ACTION" == "rollback" ]]; then
            echo "::warning::Canary version shows elevated error rates - rollback recommended"
          else
            echo "::notice::Canary version performing within acceptable parameters"
          fi
      
      - name: Create summary report
        run: |
          echo "# Canary Deployment Analysis" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Analysis timestamp: $(date)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Version | Pageviews | Errors | Error Rate |" >> $GITHUB_STEP_SUMMARY
          echo "|---------|-----------|--------|------------|" >> $GITHUB_STEP_SUMMARY
          echo "| Stable | $(jq -r '.stable.pageviews' canary-analysis.json) | $(jq -r '.stable.errors' canary-analysis.json) | $(jq -r '.stable.errorRate' canary-analysis.json) |" >> $GITHUB_STEP_SUMMARY
          echo "| Canary | $(jq -r '.canary.pageviews' canary-analysis.json) | $(jq -r '.canary.errors' canary-analysis.json) | $(jq -r '.canary.errorRate' canary-analysis.json) |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## Analysis" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- Relative error increase: $(jq -r '.analysis.relativeErrorIncrease' canary-analysis.json)" >> $GITHUB_STEP_SUMMARY
          echo "- Exceeds threshold: $(jq -r '.analysis.exceedsThreshold' canary-analysis.json)" >> $GITHUB_STEP_SUMMARY
          echo "- **Recommended action**: $(jq -r '.analysis.recommendedAction' canary-analysis.json)" >> $GITHUB_STEP_SUMMARY
      
      - name: Save Analytics Results
        uses: actions/upload-artifact@v3
        with:
          name: analytics-results
          path: canary-analysis.json
          retention-days: 30
      
      - name: Auto-rollback (if needed)
        if: env.RECOMMENDED_ACTION == 'rollback'
        run: |
          echo "Canary version error rates exceed threshold!"
          echo "Initiating automatic rollback process..."
          # This is where you would implement your rollback logic
          # For example, a script that updates configurations to direct all traffic to stable
          # Or trigger another workflow using the GitHub API
